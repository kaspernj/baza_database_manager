- content_for(:header_title) { t(".show_table", name: @table.name) }
- content_for(:header_right) do
  = link_to t(".rows"), [@profile, @database, @table, :rows], class: ["btn", "btn-default", "btn-xs"] if can? :index, Baza::Row
  = bs_edit_btn url: [:edit, @profile, @database, @table], mini: true, can: @table
  = bs_destroy_btn url: [@profile, @database, @table], mini: true, can: @table

= bs_box t(".details"), table: true do
  %tbody
    %tr
      %th= t(".database")
      %td= link_to @database.name, profile_database_path(@profile, @database.name)

= bs_box t(".columns"), right: bs_new_btn(url: [:new, @profile, @database, @table, :column], can: Baza::Column, mini: true), table: true do
  %thead
    %tr
      %th= t(".name")
      %th= t(".type")
      %th= t("actions")
  %tbody
    - @table.columns do |column|
      %tr
        %td= link_to column.name, [@profile, @database, @table, column]
        %td= column.type
        %td
          = bs_edit_btn label: false, mini: true, url: [:edit, @profile, @database, @table, column]
          = bs_destroy_btn label: false, mini: true, url: [@profile, @database, @table, column]
    - if @table.columns.empty?
      %tr
        %td{colspan: 3}= t("no_results")

= bs_box t(".indexes"), right: bs_new_btn(url: [:new, @profile, @database, @table, :index], can: Baza::Index, mini: true), table: true do
  %thead
    %tr
      %th= t(".name")
      %th= t(".columns")
      %th= t("actions")
  %tbody
    - @table.indexes do |index|
      %tr
        %td= link_to index.name, [@profile, @database, @table, index]
        %td
          - index.columns.each do |column_name|
            = link_to column_name, [@profile, @database, @table, :column, id: column_name], class: ["btn", "btn-default", "btn-xs"]
        %td
          = bs_edit_btn label: false, mini: true, url: [:edit, @profile, @database, @table, index]
          = bs_destroy_btn label: false, mini: true, url: [@profile, @database, @table, index]
    - if @table.indexes.empty?
      %tr
        %td{colspan: 3}= t("no_results")
