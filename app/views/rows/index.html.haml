- content_for(:header_title) { t(".rows") }
- content_for(:header_right) do
  = bs_new_btn url: [:new, @profile, @database, @table, :row], can: Baza::Row, mini: true

.rows-filter
  %h2= t("filter")
  = simple_form_for :filter, url: [@profile, @database, @table, :rows], method: :get do |f|
    - @table.columns.each_with_index do |column, index|
      .row
        = f.simple_fields_for "filter#{index}" do |f_col|
          .col-md-2= f_col.input :column, collection: @table.columns.map(&:name), selected: column.name
          .col-md-2= f_col.input :type, collection: RowsController::ALLOWED_FILTERS, selected: params[:filter].try(:[], "filter#{index}").try(:[], :type), include_blank: true
          .col-md-4= f_col.input :value, input_html: {value: params[:filter].try(:[], "filter#{index}").try(:[], :value)}

    = f.button :submit, t("search")

%h2= t("list")
= bs_table do
  %thead
    %tr
      - @table.columns.each do |column|
        %td= column.name
      %td= t("actions")
  %tbody
    - @query.each_row do |row|
      %tr
        - row.each_value do |value|
          %td= value

        %td
          - if row.id.present? && can?(:edit, Baza::Row)
            = bs_edit_btn label: false, mini: true, url: [:edit, @profile, @database, @table, :row, id: row.id], can: Baza::Row
            = bs_destroy_btn label: false, mini: true, url: [@profile, @database, @table, :row, id: row.id], can: Baza::Row
